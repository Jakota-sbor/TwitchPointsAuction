<Window x:Class="TwitchPointsAuction.AuctionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:TwitchPointsAuction"
        xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
        xmlns:classes="clr-namespace:TwitchPointsAuction.Classes"
        xmlns:models="clr-namespace:TwitchPointsAuction.Models"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="AuctionWindow"  Height="1080" Width="1920"
        DataContext="{Binding DataContext,RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <classes:RandomBrushConverter x:Key="RandomBrush"/>
        <classes:EnumToBooleanConverter x:Key="EnumToBoolean"/>
        <classes:StringToBrushConverter x:Key="StringToBrush"/>
        <classes:IntToStringConverter x:Key="IntToStringConverter"/>
        <CollectionViewSource x:Key="AuctionBets" Source="{Binding BetsQueue}"/>
        <CollectionViewSource x:Key="AuctionItems" Source="{Binding AuctionElements.View}" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="TotalBet" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <Storyboard x:Key="betChangedStoryboard">
            <ColorAnimation Duration="0:0:1" To="Green" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="textBlock_ElementIndex"/>
            <ColorAnimation BeginTime="0:0:1" Duration="0:0:1" To="White" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="textBlock_ElementIndex"/>
        </Storyboard>
        <Style TargetType="GridSplitter">
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridSplitter">
                        <Rectangle Opacity="{TemplateBinding Opacity}" Fill="{TemplateBinding Background}" Name="gridSplitter">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeave" SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridSplitter}}">
                                    <i:ChangePropertyAction PropertyName="Opacity"  Value="0.2"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseEnter" SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridSplitter}}">
                                    <i:ChangePropertyAction PropertyName="Opacity"  Value="1"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="DragStarted" SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridSplitter}}">
                                    <i:ChangePropertyAction PropertyName="Opacity"  Value="1"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ResizeDirection" Value="Columns">
                                <Setter Property="Cursor" Value="SizeNS"></Setter>
                            </Trigger>
                            <Trigger Property="ResizeDirection" Value="Rows">
                                <Setter Property="Cursor" Value="SizeWE"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    CornerRadius="15" 
                    Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="AuctionItemStatusTextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="LightBlue"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border 
          Name="Border"
          CornerRadius="0" 
          Padding="0"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}" >
                            <Grid>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="toggleOnOff">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontFamily" Value="/Fonts/#RobotoSlab"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="toggleImage" Source="{StaticResource Toggle_off}" MaxWidth="36" MaxHeight="36" Stretch="Uniform"/>
                            <ContentPresenter x:Name="contentPresenter" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}" Margin="5"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="toggleImage" Property="Source" Value="{StaticResource Toggle_on}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="toggleImage" Property="Source" Value="{StaticResource Toggle_off}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <GridSplitter Grid.Column="1" Opacity="0.5" Grid.Row="2" Grid.RowSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowsPreview="False"/>
        <GridSplitter Grid.Column="0" Opacity="0.5" Grid.Row="1" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowsPreview="False"/>
        <GridSplitter Grid.Column="0" Opacity="0.5" Grid.Row="3" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowsPreview="False"/>
        <Border Name="panel_ControlPanel" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="1" BorderThickness="3" CornerRadius="5" BorderBrush="White" Background="White" Margin="5" RenderTransformOrigin="0.5,0.5">
            <WrapPanel  HorizontalAlignment="Center" Background="White">
                <ToggleButton Name="toggle_Auction" Style="{StaticResource toggleOnOff}" IsChecked="{Binding Auction.CurrentState, Converter={StaticResource EnumToBoolean}, Mode=TwoWay}" Content="Аукцион"/>
                <TextBlock/>
            </WrapPanel>
        </Border>
        <Border Name="panel_StatusPanel" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="3" Grid.RowSpan="1" BorderThickness="3" CornerRadius="5" BorderBrush="White" Background="White" Margin="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Name="textblock_AuctionRules" Foreground="WhiteSmoke" 
                               FontWeight="SemiBold" FontSize="20"
                               TextWrapping="Wrap" TextAlignment="Left" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                </TextBlock>
                <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowsPreview="False"/>
                <TextBlock Grid.Column="2" Foreground="WhiteSmoke" Name="textBlock_Leader"
                               VerticalAlignment="Center" HorizontalAlignment="Center"
                               FontWeight="Bold" FontSize="24" TextWrapping="Wrap" TextTrimming="WordEllipsis"
                               Text="{Binding AuctionElementLeader, TargetNullValue=''}"/>
                <GridSplitter Grid.Column="3" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowsPreview="False"/>
                <TextBlock Grid.Column="4" Foreground="Black" Name="textBlock_AuctionTimeLeft" 
                               VerticalAlignment="Center" HorizontalAlignment="Center" 
                               FontWeight="Bold" FontSize="24" TextWrapping="Wrap"
                               Text="{Binding Auction.CurrentTimeLeft, StringFormat={}{0:mm\\:ss}, FallbackValue='00:00' }"/>
            </Grid>
        </Border>
        <ScrollViewer Name="panel_BetsPanel" Grid.Column="3" Grid.Row="2" Grid.ColumnSpan="1" Grid.RowSpan="1" Margin="5" CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <ItemsControl x:Name="list_BetList" Background="Transparent" BorderThickness="0"
                             ItemsSource="{Binding Source={StaticResource AuctionBets}}"
                          ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility ="Disabled"
                          ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Stretch"
                          Margin="0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" BorderBrush="WhiteSmoke" Margin="3" BorderThickness="3" CornerRadius="15" Background="{Binding Converter={StaticResource RandomBrush}}">
                            <Grid x:Name="border_Bet">
                                <Border Margin="0" BorderThickness="0">
                                    <WrapPanel Orientation="Horizontal" Margin="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <Viewbox Stretch="UniformToFill" HorizontalAlignment="Left" >
                                            <TextBlock Name="textBlock_User" Width="{Binding Path=ActualWidth, ElementName=border_Bet}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"  Style="{StaticResource AuctionItemStatusTextBlock}" Text="{Binding User, StringFormat='☺ {0}', NotifyOnTargetUpdated=True}"/>
                                        </Viewbox>
                                        <Viewbox Stretch="UniformToFill" HorizontalAlignment="Left">
                                            <TextBlock Name="textBlock_Cost" Width="{Binding Path=ActualWidth, ElementName=border_Bet}" Style="{StaticResource AuctionItemStatusTextBlock}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Cost, StringFormat='💰 {0:## ### ###}', NotifyOnTargetUpdated=True}"/>
                                        </Viewbox>
                                        <Viewbox Stretch="UniformToFill" HorizontalAlignment="Left">
                                            <TextBox Name="textBlock_Input" Width="{Binding Path=ActualWidth, ElementName=border_Bet}" TextWrapping="WrapWithOverflow" Text="{Binding UserInput, Mode=OneWay, NotifyOnTargetUpdated=True}"/>
                                        </Viewbox>
                                    </WrapPanel>
                                </Border>
                                <Viewbox x:Name="button_RemoveBet" Visibility="Collapsed" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 -15 -15 0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseEnter" SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}}">
                                            <i:ChangePropertyAction TargetName="button_RemoveBet"  PropertyName="Visibility"  Value="Visible"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseLeave" SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}}">
                                            <i:ChangePropertyAction TargetName="button_RemoveBet" PropertyName="Visibility"  Value="Collapsed"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button x:Name="button_BetDelete" Foreground="Red" Background="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Padding="3"  Content="❌" Click="button_BetDelete_Click" />
                                </Viewbox>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <!--ItemsSource="{Binding AuctionElements}"-->
        <!-- <ScrollViewer  CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"> -->
        <ScrollViewer  Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="1" Grid.RowSpan="1"  Margin="5"  CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <ItemsControl x:Name="list_LotListPanel" AllowDrop="True"
                          HorizontalContentAlignment="Stretch"
                         Drop="list_LotListPanel_Drop">
                <!-- ItemsSource="{Binding AuctionElements}" -->
                <ItemsControl.ItemsSource>
                    <Binding Source="{StaticResource AuctionItems}"/>
                </ItemsControl.ItemsSource>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="border_AuctionElement" BorderBrush="WhiteSmoke" Margin="3" BorderThickness="3" CornerRadius="15" Background="{Binding Converter={StaticResource RandomBrush}}">
                            <Grid MaxHeight="50">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.Column="0" >
                                    <Border Margin="5" Background="Transparent" BorderThickness="5" BorderBrush="WhiteSmoke" CornerRadius="10">
                                        <Viewbox>
                                            <TextBlock Name="textBlock_ElementIndex" Style="{StaticResource AuctionItemStatusTextBlock}" Margin="5" Text="{Binding Index, StringFormat='★ {0}', NotifyOnTargetUpdated=True}"/>
                                        </Viewbox>
                                    </Border>
                                    <Border Margin="5" Background="Transparent" BorderThickness="5" BorderBrush="WhiteSmoke" CornerRadius="10">
                                        <Viewbox>
                                            <TextBox Name="textBlock_ElementTotalBet" Margin="5" Text="{Binding TotalBet, Mode=TwoWay, StringFormat='💰 {0:## ##0 000}', Converter={StaticResource IntToStringConverter}, NotifyOnTargetUpdated=True}">
                                                <!--
                                                <TextBlock.Triggers>
                                                    <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:1" To="Green" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock_ElementTotalBet"/>
                                                                <ColorAnimation BeginTime="0:0:1" Duration="0:0:1" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock_ElementTotalBet"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </TextBlock.Triggers>
                                                -->
                                            </TextBox>
                                        </Viewbox>
                                    </Border>
                                    <!--
                                    <Border Margin="5" Background="Transparent" Name="image_Poster" BorderThickness="5" BorderBrush="WhiteSmoke" CornerRadius="10">
                                        <Viewbox>
                                            <Rectangle Height="{Binding Path=ActualHeight, ElementName=image_Poster}" Width="{Binding Path=ActualHeight, ElementName=image_Poster}"  RadiusX="10" RadiusY="10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                <Rectangle.Fill>
                                                    <ImageBrush ImageSource="{Binding LotData.PosterUri}" Stretch="UniformToFill"/>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Viewbox>
                                    </Border>
                                    -->
                                    <!--
                                        <Border Margin="3" BorderThickness="5" BorderBrush="White" CornerRadius="10">
                                            <TextBlock Style="{StaticResource AuctionItemStatusTextBlock}" Margin="5" Text="{Binding TotalBet, StringFormat='♥ 100'}"/>
                                        </Border>
                                        -->
                                </StackPanel>
                                <Viewbox Grid.Column="1">
                                    <TextBlock Name="textblock_Title" Style="{StaticResource AuctionItemStatusTextBlock}" Text="{Binding LotData.Name, FallbackValue='Нет названия'}"/>
                                    <!--
                                <local:AuctionLotControl VerticalContentAlignment="Stretch" HorizontalContentAlignment="Center" LotContent="{Binding LotData}"/>
                                -->
                                </Viewbox>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</Window>
