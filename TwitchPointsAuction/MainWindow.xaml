<Window x:Class="TwitchPointsAuction.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TwitchPointsAuction"
        xmlns:models="clr-namespace:TwitchPointsAuction.Models"
        xmlns:classes="clr-namespace:TwitchPointsAuction.Classes"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Twitch аукцион" Height="300" Width="420"
        DataContext="{Binding DataContext,RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <classes:RandomBrushConverter x:Key="RandomBrush"/>
        <classes:EnumToBooleanConverter x:Key="EnumToBoolean"/>
        <classes:StringToBrushConverter x:Key="StringToBrush"/>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="AuctionItemStatusTextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Fonts/#RobotoSlab"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="TextBox" x:Key="TextBoxWithTag">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="BorderBrush" Value="LightBlue"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border 
          Name="Border"
          CornerRadius="2" 
          Padding="2"
          Background="#FFF"
          BorderBrush="#888"
          BorderThickness="1" >
                            <Grid>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                                <TextBlock x:Name="WatermarkText" Text="{TemplateBinding Tag}" Foreground="Gray" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" IsHitTestVisible="False"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Visible" TargetName="WatermarkText"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}" Value="">
                                <Setter Property="Visibility" Value="Visible" TargetName="WatermarkText"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="toggleOnOff">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontFamily" Value="/Fonts/#RobotoSlab"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="toggleImage" Source="{StaticResource Toggle_off}" MaxWidth="48" MaxHeight="48" Stretch="Uniform"/>
                            <ContentPresenter x:Name="contentPresenter" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}" Margin="5"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="toggleImage" Property="Source" Value="{StaticResource Toggle_on}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="toggleImage" Property="Source" Value="{StaticResource Toggle_off}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <DockPanel x:Name="dockpanel_Main" LastChildFill="True" Background="Black">
            <Border DockPanel.Dock="Top" BorderThickness="3" CornerRadius="5" BorderBrush="White" Background="White" Margin="5" RenderTransformOrigin="0.5,0.5">
                <WrapPanel  HorizontalAlignment="Center" Background="White">
                    <ToggleButton Name="toggle_TwitchPubSub" Style="{StaticResource toggleOnOff}" Command="{Binding TogglePubSubCommand}" CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}" Content="Twitch PubSub"/>
                    <ToggleButton Name="toggle_TwitchChat" Style="{StaticResource toggleOnOff}" Command="{Binding ToggleChatCommand}" CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}" Content="Twitch Чат"/>
                    <Button Name="button_CreateAuction" Content="Создать аукцион" Click="button_CreateAuction_Click"/>
                    <Button Name="togglebutton_Settings" Content="Настройки" Click="togglebutton_Settings_Click"/>
                </WrapPanel>
            </Border>
            <Border DockPanel.Dock="Bottom" BorderThickness="3" CornerRadius="5" BorderBrush="White" Background="White" Margin="5" RenderTransformOrigin="0.5,0.5">
                <WrapPanel HorizontalAlignment="Center">
                    <TextBlock Text="Бесплатная клоунская версия" VerticalAlignment="Center"/>
                    <Image Source="{StaticResource Clown}" Stretch="Uniform" MaxHeight="32" MaxWidth="32" />
                </WrapPanel>
            </Border>
            <Border>
                
            </Border>
        </DockPanel>
    </Grid>
</Window>
